name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Clean
        working-directory: ./src/fake_terminal
        run: flutter clean && find . -name "*.g.dart" -exec rm -rf {} \; && find . -name "*.mocks.dart" -exec rm -rf {} \;
      - name: Check format
        working-directory: ./src/fake_terminal
        run: flutter format --line-length=120 -n --set-exit-if-changed .
      - name: Print
        env:
          my_env_var: ${{ github.ref }}
        run: echo "${my_env_var}"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Lint using flutter analyze
        working-directory: ./src/fake_terminal
        run: flutter analyze

  build_runner:
    name: build_runner
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Clean
        working-directory: ./src/fake_terminal
        run: flutter clean && find . -name "*.g.dart" -exec rm -rf {} \; && find . -name "*.mocks.dart" -exec rm -rf {} \;
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Generate code using build_runner
        working-directory: ./src/fake_terminal
        run: flutter pub run build_runner build

  test:
    name: Test
    needs: [lint, format, build_runner]
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Run all tests
        working-directory: ./src/fake_terminal
        run: flutter test --reporter=expanded --coverage

  release:
    if: "(github.ref == 'master')"
    name: Release
    needs: test
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Checkout release
        run: git checkout "release/master" && git pull --rebase origin master
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Build
        working-directory: ./src/fake_terminal
        run: flutter build web
      - name: Prepare
        run: rm -rf docs/* && mv src/fake_terminal/build/web/* docs/
      - name: Publish
        run: git commit -m "Release - ${github.event_name}" && git push
        