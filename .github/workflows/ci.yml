name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Clean
        working-directory: ./src/fake_terminal
        run: scripts/clean_all.sh
      - name: Check format
        working-directory: ./src/fake_terminal
        run: scripts/check_format.sh

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Lint using flutter analyze
        working-directory: ./src/fake_terminal
        run: flutter analyze

  build_runner:
    name: build_runner
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Clean
        working-directory: ./src/fake_terminal
        run: scripts/clean_all.sh
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Generate code using build_runner
        working-directory: ./src/fake_terminal
        run: flutter pub run build_runner build

  test:
    name: Test
    needs: [lint, format, build_runner]
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Run all tests
        working-directory: ./src/fake_terminal
        run: flutter test --reporter=expanded --coverage
      - name: Check coverage
        working-directory: ./src/fake_terminal
        run: dart scripts/check_coverage.dart coverage/lcov.info

  build:
    if: "(github.ref != 'refs/heads/master')"
    name: Build
    needs: test
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Build
        working-directory: ./src/fake_terminal
        run: flutter build web

  release:
    if: "(github.ref == 'refs/heads/master')"
    name: Release
    needs: test
    runs-on: ubuntu-latest
    container: cirrusci/flutter:stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup
        env:
          githubActor: ${{ github.actor }}
          githubRepository: ${{ github.repository }}
        run: git config --global user.name "$githubActor" && git config --global user.email "$githubActor@$githubRepository"
      - name: Checkout release
        run: git fetch origin && git checkout "origin/release/master" && git merge -X theirs "origin/master" --allow-unrelated-histories
      - name: Get dependencies
        working-directory: ./src/fake_terminal
        run: flutter pub get
      - name: Build
        working-directory: ./src/fake_terminal
        run: flutter build web
      - name: Prepare
        run: rm -rf docs/* && mv src/fake_terminal/build/web/* docs/
      - name: Publish
        env:
          githubEventName: ${{ github.event_name }}
        run: git add docs/* && git commit -m "[CD] Release (${githubEventName})" && git push origin HEAD:release/master
        